#!/usr/bin/env ruby

class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def green
    colorize(32)
  end

  def blue
    colorize(34)
  end

  def red
    colorize(31)
  end
end


Dir.mkdir("#{Dir.home}/.tasks") unless Dir.exists?("#{Dir.home}/.tasks")
TASK_DIR = "#{Dir.home}/.tasks"

def new_task(content=ARGV[1..ARGV.length].join(" "))
  clean_tasks
  task_number = Dir.glob("#{TASK_DIR}/*.task").count + 1
  File.new("#{TASK_DIR}/#{task_number}.task", "w+")
  File.open("#{TASK_DIR}/#{task_number}.task", "w+") do |f|
    f.puts content
  end
  puts "New task created!"
end

def list_tasks
  clean_tasks
  task_list = Dir.glob("#{TASK_DIR}/*.task")
  if task_list.empty?
    puts "You have no remaining tasks".green
  else
    puts "To Do:"
    task_list.sort.each do |task|
      File.open(task, "r+") do |f|
        print "#{File.basename(task).tr('.task', '')}) #{f.read}".blue
      end
    end
  end
end

def complete_task(task_number=ARGV[1])
  task_list = Dir.glob("#{TASK_DIR}/*.task")
  deleted = false

  task_list.sort.each do |task|
    if File.basename(task).tr('.task', '') == task_number
      File.delete(task) && deleted = true
    end
  end

  if deleted
    puts "Task completed!".green
  else
    puts "Task #{task_number} not found.".red
  end
  clean_tasks
end

def clean_tasks
  task_list = Dir.glob("#{TASK_DIR}/*.task")
  unless task_list.empty?
    task_list.sort.each_with_index do |task, i|
      if File.basename(task).tr('.task', '') != (i + 1).to_s
        File.rename(task, "#{TASK_DIR}/#{i + 1}.task")
      end
    end
  end
end

if ARGV.empty?
  puts "Usage: "
  puts "       tdo new - create a new task   (e.g. 'tdo new make a new task')"
  puts "       tdo tasks - get a list of all current tasks"
  puts "       tdo complete - complete a task by giving its number   (e.g. 'tdo complete 1')"
elsif ARGV[0] == "new"
  new_task
elsif ARGV[0] == "tasks"
  list_tasks
elsif ARGV[0] == "complete"
  complete_task
else
  puts "Unrecognized Command. Run 'tdo' to see usage"
end
